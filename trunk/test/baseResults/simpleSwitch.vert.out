
Top IR:
; ModuleID = 'Glslang'

%gl_PerVertex = type { <4 x float>, float, [1 x float], <4 x float>, <4 x float>, <4 x float>, <4 x float>, <4 x float>, [1 x <4 x float>], float, [1 x float] }

@inf = global float 0.000000e+00
@b = external addrspace(2) constant i32
@c = external addrspace(2) constant i32
@"anon@0" = global %gl_PerVertex zeroinitializer
@gl_VertexID = global i32 0
@gl_InstanceID = global i32 0

define fastcc void @main() {
entry:
  %"anon@0" = alloca <4 x float>
  %out_v = alloca <3 x float>
  %param = alloca <3 x float>
  %a = alloca i32
  br label %mainBody

mainBody:                                         ; preds = %entry
  %a1 = load i32 addrspace(2)* @b, !gla.uniform !6
  store i32 %a1, i32* %a
  call void @"foo(vf3;"(<3 x float>* %param)
  %out_v2 = load <3 x float>* %param
  store <3 x float> %out_v2, <3 x float>* %out_v
  %0 = load i32 addrspace(2)* @c, !gla.uniform !8
  %1 = sub i32 %0, 8
  switch i32 %1, label %switch-segment7 [
    i32 1, label %switch-segment
    i32 2, label %switch-segment3
    i32 3, label %switch-segment4
    i32 4, label %switch-segment5
    i32 9, label %switch-segment6
  ]

switch-segment:                                   ; preds = %mainBody
  %2 = load i32* %a
  %a8 = mul i32 2, %2
  store i32 %a8, i32* %a
  br label %switch-merge

switch-segment3:                                  ; preds = %mainBody
  %3 = load i32* %a
  %a9 = add i32 %3, 5
  store i32 %a9, i32* %a
  br label %switch-segment4

switch-segment4:                                  ; preds = %switch-segment3, %mainBody
  %4 = load i32* %a
  %a10 = sub i32 %4, 15
  store i32 %a10, i32* %a
  br label %switch-merge

switch-segment5:                                  ; preds = %mainBody
  %5 = load i32* %a
  %6 = load i32 addrspace(2)* @b, !gla.uniform !6
  %7 = mul i32 %5, %6
  %8 = load i32* %a
  %a12 = add i32 %8, %7
  store i32 %a12, i32* %a
  br label %switch-merge

switch-segment6:                                  ; preds = %mainBody
  %9 = load i32* %a
  %a14 = sub i32 %9, 1
  store i32 %a14, i32* %a
  br label %switch-segment7

switch-segment7:                                  ; preds = %switch-segment6, %mainBody
  %10 = load i32* %a
  %a15 = sub i32 %10, 13
  store i32 %a15, i32* %a
  br label %switch-merge

switch-merge:                                     ; preds = %switch-segment7, %switch-segment5, %switch-segment4, %switch-segment
  %11 = load <3 x float>* %out_v
  %12 = load i32* %a
  %13 = sitofp i32 %12 to float
  %14 = load <4 x float>* %"anon@0"
  %15 = extractelement <3 x float> %11, i32 0
  %16 = insertelement <4 x float> %14, float %15, i32 0
  %17 = extractelement <3 x float> %11, i32 1
  %18 = insertelement <4 x float> %16, float %17, i32 1
  %19 = extractelement <3 x float> %11, i32 2
  %20 = insertelement <4 x float> %18, float %19, i32 2
  %21 = insertelement <4 x float> %20, float %13, i32 3
  store <4 x float> %21, <4 x float>* getelementptr inbounds (%gl_PerVertex* @"anon@0", i32 0, i32 0)
  br label %stage-epilogue

post-switch-break:                                ; No predecessors!
  unreachable

post-switch-break11:                              ; No predecessors!
  unreachable

post-switch-break13:                              ; No predecessors!
  unreachable

post-switch-break16:                              ; No predecessors!
  unreachable

stage-epilogue:                                   ; preds = %switch-merge
  br label %stage-exit

stage-exit:                                       ; preds = %stage-epilogue
  ret void
}

; Function Attrs: alwaysinline
define internal fastcc void @"foo(vf3;"(<3 x float>*) #0 {
entry:
  %out_v17 = alloca <3 x float>
  %out_v15 = alloca <3 x float>
  %out_v13 = alloca <3 x float>
  %out_v11 = alloca <3 x float>
  %out_v9 = alloca <3 x float>
  %out_v = alloca <3 x float>
  %t = alloca float
  %q = alloca float
  %p = alloca float
  %1 = load float* @inf
  %2 = load float* @inf
  %3 = fsub float 3.000000e+00, %2
  %p1 = fmul float %1, %3
  store float %p1, float* %p
  %4 = load float* @inf
  %5 = load float* @inf
  %6 = fmul float %5, 0x402B9999A0000000
  %7 = fsub float 3.000000e+00, %6
  %q2 = fmul float %4, %7
  store float %q2, float* %q
  %8 = load float* @inf
  %9 = load float* @inf
  %10 = fsub float 3.000000e+00, %9
  %t3 = fmul float %8, %10
  store float %t3, float* %t
  %11 = load i32 addrspace(2)* @b, !gla.uniform !6
  switch i32 %11, label %switch-merge [
    i32 0, label %switch-segment
    i32 1, label %switch-segment4
    i32 2, label %switch-segment5
    i32 3, label %switch-segment6
    i32 4, label %switch-segment7
    i32 5, label %switch-segment8
  ]

switch-segment:                                   ; preds = %entry
  %12 = load float* @inf
  %13 = load float* %t
  %14 = load float* %p
  %15 = load <3 x float>* %out_v
  %16 = insertelement <3 x float> %15, float %12, i32 0
  %17 = insertelement <3 x float> %16, float %13, i32 1
  %18 = insertelement <3 x float> %17, float %14, i32 2
  store <3 x float> %18, <3 x float>* %0
  br label %switch-merge

switch-segment4:                                  ; preds = %entry
  %19 = load float* %q
  %20 = load float* @inf
  %21 = load float* %p
  %22 = load <3 x float>* %out_v9
  %23 = insertelement <3 x float> %22, float %19, i32 0
  %24 = insertelement <3 x float> %23, float %20, i32 1
  %25 = insertelement <3 x float> %24, float %21, i32 2
  store <3 x float> %25, <3 x float>* %0
  br label %switch-merge

switch-segment5:                                  ; preds = %entry
  %26 = load float* %p
  %27 = load float* @inf
  %28 = load float* %t
  %29 = load <3 x float>* %out_v11
  %30 = insertelement <3 x float> %29, float %26, i32 0
  %31 = insertelement <3 x float> %30, float %27, i32 1
  %32 = insertelement <3 x float> %31, float %28, i32 2
  store <3 x float> %32, <3 x float>* %0
  br label %switch-merge

switch-segment6:                                  ; preds = %entry
  %33 = load float* %p
  %34 = load float* %q
  %35 = load float* @inf
  %36 = load <3 x float>* %out_v13
  %37 = insertelement <3 x float> %36, float %33, i32 0
  %38 = insertelement <3 x float> %37, float %34, i32 1
  %39 = insertelement <3 x float> %38, float %35, i32 2
  store <3 x float> %39, <3 x float>* %0
  br label %switch-merge

switch-segment7:                                  ; preds = %entry
  %40 = load float* %t
  %41 = load float* %p
  %42 = load float* @inf
  %43 = load <3 x float>* %out_v15
  %44 = insertelement <3 x float> %43, float %40, i32 0
  %45 = insertelement <3 x float> %44, float %41, i32 1
  %46 = insertelement <3 x float> %45, float %42, i32 2
  store <3 x float> %46, <3 x float>* %0
  br label %switch-merge

switch-segment8:                                  ; preds = %entry
  %47 = load float* @inf
  %48 = load float* %p
  %49 = load float* %q
  %50 = load <3 x float>* %out_v17
  %51 = insertelement <3 x float> %50, float %47, i32 0
  %52 = insertelement <3 x float> %51, float %48, i32 1
  %53 = insertelement <3 x float> %52, float %49, i32 2
  store <3 x float> %53, <3 x float>* %0
  br label %switch-merge

switch-merge:                                     ; preds = %switch-segment8, %switch-segment7, %switch-segment6, %switch-segment5, %switch-segment4, %switch-segment, %entry
  ret void

post-switch-break:                                ; No predecessors!
  unreachable

post-switch-break10:                              ; No predecessors!
  unreachable

post-switch-break12:                              ; No predecessors!
  unreachable

post-switch-break14:                              ; No predecessors!
  unreachable

post-switch-break16:                              ; No predecessors!
  unreachable

post-switch-break18:                              ; No predecessors!
  unreachable
}

attributes #0 = { alwaysinline }

!gla.inputs = !{!0, !2, !4}
!gla.uniforms = !{!6, !8}
!gla.entrypoint = !{!9}
!gla.outputs = !{!10}
!gla.noStaticUse = !{!2, !4}

!0 = metadata !{metadata !"inf", i32 1, float* @inf_typeProxy, metadata !1}
!1 = metadata !{i32 0, i32 0, i32 1024, null, i32 0}
!2 = metadata !{metadata !"gl_VertexID", i32 2, i32* @gl_VertexID_typeProxy, metadata !3}
!3 = metadata !{i32 0, i32 0, i32 1036, null, i32 0, i32 7}
!4 = metadata !{metadata !"gl_InstanceID", i32 3, i32* @gl_InstanceID_typeProxy, metadata !5}
!5 = metadata !{i32 0, i32 0, i32 1037, null, i32 0, i32 8}
!6 = metadata !{metadata !"b", i32 12, i32* @b_typeProxy, metadata !7}
!7 = metadata !{i32 0, i32 0, i32 1024, null}
!8 = metadata !{metadata !"c", i32 12, i32* @c_typeProxy, metadata !7}
!9 = metadata !{metadata !"main", i32 15}
!10 = metadata !{metadata !"", i32 16, %gl_PerVertex* @"anon@0_typeProxy", metadata !11, metadata !12}
!11 = metadata !{i32 0, i32 0, i32 1025, null, i32 0}
!12 = metadata !{metadata !"gl_PerVertex", metadata !7, metadata !"gl_Position", metadata !13, metadata !"gl_PointSize", metadata !15, metadata !"gl_ClipDistance", metadata !17, metadata !"gl_ClipVertex", metadata !19, metadata !"gl_FrontColor", metadata !21, metadata !"gl_BackColor", metadata !23, metadata !"gl_FrontSecondaryColor", metadata !25, metadata !"gl_BackSecondaryColor", metadata !27, metadata !"gl_TexCoord", metadata !29, metadata !"gl_FogFragCoord", metadata !31, metadata !"gl_CullDistance", metadata !33}
!13 = metadata !{metadata !"", metadata !14}
!14 = metadata !{i32 0, i32 0, i32 1024, null, i32 -1, i32 9}
!15 = metadata !{metadata !"", metadata !16}
!16 = metadata !{i32 0, i32 0, i32 1024, null, i32 -1, i32 10}
!17 = metadata !{metadata !"", metadata !18}
!18 = metadata !{i32 0, i32 0, i32 1024, null, i32 -1, i32 12}
!19 = metadata !{metadata !"", metadata !20}
!20 = metadata !{i32 0, i32 0, i32 1024, null, i32 -1, i32 11}
!21 = metadata !{metadata !"", metadata !22}
!22 = metadata !{i32 0, i32 0, i32 1024, null, i32 -1, i32 24}
!23 = metadata !{metadata !"", metadata !24}
!24 = metadata !{i32 0, i32 0, i32 1024, null, i32 -1, i32 25}
!25 = metadata !{metadata !"", metadata !26}
!26 = metadata !{i32 0, i32 0, i32 1024, null, i32 -1, i32 26}
!27 = metadata !{metadata !"", metadata !28}
!28 = metadata !{i32 0, i32 0, i32 1024, null, i32 -1, i32 27}
!29 = metadata !{metadata !"", metadata !30}
!30 = metadata !{i32 0, i32 0, i32 1024, null, i32 -1, i32 28}
!31 = metadata !{metadata !"", metadata !32}
!32 = metadata !{i32 0, i32 0, i32 1024, null, i32 -1, i32 29}
!33 = metadata !{metadata !"", metadata !34}
!34 = metadata !{i32 0, i32 0, i32 1024, null, i32 -1, i32 13}


Bottom IR:
; ModuleID = 'Glslang'

%gl_PerVertex = type { <4 x float>, float, [1 x float], <4 x float>, <4 x float>, <4 x float>, <4 x float>, <4 x float>, [1 x <4 x float>], float, [1 x float] }

@inf = global float 0.000000e+00
@b = external addrspace(2) constant i32
@c = external addrspace(2) constant i32
@"anon@0" = global %gl_PerVertex zeroinitializer
@gl_VertexID = global i32 0
@gl_InstanceID = global i32 0
@gla_globalAgg = internal global <3 x float> undef

define fastcc void @main() {
entry:
  %a1 = load i32 addrspace(2)* @b, align 4, !gla.uniform !6
  %0 = load float* @inf, align 4
  %1 = fsub float 3.000000e+00, %0
  %p1.i = fmul float %0, %1
  %2 = fmul float %0, 0x402B9999A0000000
  %3 = fsub float 3.000000e+00, %2
  %q2.i = fmul float %0, %3
  %aggregate = load <3 x float>* @gla_globalAgg
  switch i32 %a1, label %"foo(vf3;.exit" [
    i32 0, label %switch-segment.i
    i32 1, label %switch-segment4.i
    i32 2, label %switch-segment5.i
    i32 3, label %switch-segment6.i
    i32 4, label %switch-segment7.i
    i32 5, label %switch-segment8.i
  ]

switch-segment.i:                                 ; preds = %entry
  %4 = call <3 x float> @llvm.gla.fMultiInsert.v3f32.v3f32.f32.f32.f32.f32(<3 x float> undef, i32 7, float %0, i32 0, float %p1.i, i32 0, float %p1.i, i32 0, float undef, i32 undef)
  br label %"foo(vf3;.exit"

switch-segment4.i:                                ; preds = %entry
  %5 = call <3 x float> @llvm.gla.fMultiInsert.v3f32.v3f32.f32.f32.f32.f32(<3 x float> undef, i32 7, float %q2.i, i32 0, float %0, i32 0, float %p1.i, i32 0, float undef, i32 undef)
  br label %"foo(vf3;.exit"

switch-segment5.i:                                ; preds = %entry
  %6 = call <3 x float> @llvm.gla.fMultiInsert.v3f32.v3f32.f32.f32.f32.f32(<3 x float> undef, i32 7, float %p1.i, i32 0, float %0, i32 0, float %p1.i, i32 0, float undef, i32 undef)
  br label %"foo(vf3;.exit"

switch-segment6.i:                                ; preds = %entry
  %7 = call <3 x float> @llvm.gla.fMultiInsert.v3f32.v3f32.f32.f32.f32.f32(<3 x float> undef, i32 7, float %p1.i, i32 0, float %q2.i, i32 0, float %0, i32 0, float undef, i32 undef)
  br label %"foo(vf3;.exit"

switch-segment7.i:                                ; preds = %entry
  %8 = call <3 x float> @llvm.gla.fMultiInsert.v3f32.v3f32.f32.f32.f32.f32(<3 x float> undef, i32 7, float %p1.i, i32 0, float %p1.i, i32 0, float %0, i32 0, float undef, i32 undef)
  br label %"foo(vf3;.exit"

switch-segment8.i:                                ; preds = %entry
  %9 = call <3 x float> @llvm.gla.fMultiInsert.v3f32.v3f32.f32.f32.f32.f32(<3 x float> undef, i32 7, float %0, i32 0, float %p1.i, i32 0, float %q2.i, i32 0, float undef, i32 undef)
  br label %"foo(vf3;.exit"

"foo(vf3;.exit":                                  ; preds = %entry, %switch-segment.i, %switch-segment4.i, %switch-segment5.i, %switch-segment6.i, %switch-segment7.i, %switch-segment8.i
  %param.0 = phi <3 x float> [ %aggregate, %entry ], [ %9, %switch-segment8.i ], [ %8, %switch-segment7.i ], [ %7, %switch-segment6.i ], [ %6, %switch-segment5.i ], [ %5, %switch-segment4.i ], [ %4, %switch-segment.i ]
  %10 = load i32 addrspace(2)* @c, align 4, !gla.uniform !8
  switch i32 %10, label %switch-segment7 [
    i32 9, label %switch-segment
    i32 10, label %switch-segment3
    i32 11, label %switch-segment4
    i32 12, label %switch-segment5
    i32 17, label %switch-segment6
  ]

switch-segment:                                   ; preds = %"foo(vf3;.exit"
  %a8 = shl i32 %a1, 1
  br label %switch-merge

switch-segment3:                                  ; preds = %"foo(vf3;.exit"
  %a9 = add i32 %a1, 5
  br label %switch-segment4

switch-segment4:                                  ; preds = %switch-segment3, %"foo(vf3;.exit"
  %a.0 = phi i32 [ %a1, %"foo(vf3;.exit" ], [ %a9, %switch-segment3 ]
  %a10 = add i32 %a.0, -15
  br label %switch-merge

switch-segment5:                                  ; preds = %"foo(vf3;.exit"
  %11 = mul i32 %a1, %a1
  %a12 = add i32 %11, %a1
  br label %switch-merge

switch-segment6:                                  ; preds = %"foo(vf3;.exit"
  %a14 = add i32 %a1, -1
  br label %switch-segment7

switch-segment7:                                  ; preds = %switch-segment6, %"foo(vf3;.exit"
  %a.1 = phi i32 [ %a1, %"foo(vf3;.exit" ], [ %a14, %switch-segment6 ]
  %a15 = add i32 %a.1, -13
  br label %switch-merge

switch-merge:                                     ; preds = %switch-segment7, %switch-segment5, %switch-segment4, %switch-segment
  %a.2 = phi i32 [ %a15, %switch-segment7 ], [ %a12, %switch-segment5 ], [ %a10, %switch-segment4 ], [ %a8, %switch-segment ]
  %12 = sitofp i32 %a.2 to float
  %13 = call <4 x float> @llvm.gla.fMultiInsert.v4f32.v4f32.v3f32.v3f32.v3f32.f32(<4 x float> undef, i32 15, <3 x float> %param.0, i32 0, <3 x float> %param.0, i32 1, <3 x float> %param.0, i32 2, float %12, i32 0)
  %gla_constGEP = getelementptr %gl_PerVertex* @"anon@0", i32 0, i32 0
  store <4 x float> %13, <4 x float>* %gla_constGEP, align 16
  br label %stage-epilogue

stage-epilogue:                                   ; preds = %switch-merge
  br label %stage-exit

stage-exit:                                       ; preds = %stage-epilogue
  ret void
}

; Function Attrs: nounwind readnone
declare <3 x float> @llvm.gla.fMultiInsert.v3f32.v3f32.f32.f32.f32.f32(<3 x float>, i32, float, i32, float, i32, float, i32, float, i32) #0

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.gla.fMultiInsert.v4f32.v4f32.v3f32.v3f32.v3f32.f32(<4 x float>, i32, <3 x float>, i32, <3 x float>, i32, <3 x float>, i32, float, i32) #0

attributes #0 = { nounwind readnone }

!gla.inputs = !{!0, !2, !4}
!gla.uniforms = !{!6, !8}
!gla.entrypoint = !{!9}
!gla.outputs = !{!10}
!gla.noStaticUse = !{!2, !4}

!0 = metadata !{metadata !"inf", i32 1, float* @inf_typeProxy, metadata !1}
!1 = metadata !{i32 0, i32 0, i32 1024, null, i32 0}
!2 = metadata !{metadata !"gl_VertexID", i32 2, i32* @gl_VertexID_typeProxy, metadata !3}
!3 = metadata !{i32 0, i32 0, i32 1036, null, i32 0, i32 7}
!4 = metadata !{metadata !"gl_InstanceID", i32 3, i32* @gl_InstanceID_typeProxy, metadata !5}
!5 = metadata !{i32 0, i32 0, i32 1037, null, i32 0, i32 8}
!6 = metadata !{metadata !"b", i32 12, i32* @b_typeProxy, metadata !7}
!7 = metadata !{i32 0, i32 0, i32 1024, null}
!8 = metadata !{metadata !"c", i32 12, i32* @c_typeProxy, metadata !7}
!9 = metadata !{metadata !"main", i32 15}
!10 = metadata !{metadata !"", i32 16, %gl_PerVertex* @"anon@0_typeProxy", metadata !11, metadata !12}
!11 = metadata !{i32 0, i32 0, i32 1025, null, i32 0}
!12 = metadata !{metadata !"gl_PerVertex", metadata !7, metadata !"gl_Position", metadata !13, metadata !"gl_PointSize", metadata !15, metadata !"gl_ClipDistance", metadata !17, metadata !"gl_ClipVertex", metadata !19, metadata !"gl_FrontColor", metadata !21, metadata !"gl_BackColor", metadata !23, metadata !"gl_FrontSecondaryColor", metadata !25, metadata !"gl_BackSecondaryColor", metadata !27, metadata !"gl_TexCoord", metadata !29, metadata !"gl_FogFragCoord", metadata !31, metadata !"gl_CullDistance", metadata !33}
!13 = metadata !{metadata !"", metadata !14}
!14 = metadata !{i32 0, i32 0, i32 1024, null, i32 -1, i32 9}
!15 = metadata !{metadata !"", metadata !16}
!16 = metadata !{i32 0, i32 0, i32 1024, null, i32 -1, i32 10}
!17 = metadata !{metadata !"", metadata !18}
!18 = metadata !{i32 0, i32 0, i32 1024, null, i32 -1, i32 12}
!19 = metadata !{metadata !"", metadata !20}
!20 = metadata !{i32 0, i32 0, i32 1024, null, i32 -1, i32 11}
!21 = metadata !{metadata !"", metadata !22}
!22 = metadata !{i32 0, i32 0, i32 1024, null, i32 -1, i32 24}
!23 = metadata !{metadata !"", metadata !24}
!24 = metadata !{i32 0, i32 0, i32 1024, null, i32 -1, i32 25}
!25 = metadata !{metadata !"", metadata !26}
!26 = metadata !{i32 0, i32 0, i32 1024, null, i32 -1, i32 26}
!27 = metadata !{metadata !"", metadata !28}
!28 = metadata !{i32 0, i32 0, i32 1024, null, i32 -1, i32 27}
!29 = metadata !{metadata !"", metadata !30}
!30 = metadata !{i32 0, i32 0, i32 1024, null, i32 -1, i32 28}
!31 = metadata !{metadata !"", metadata !32}
!32 = metadata !{i32 0, i32 0, i32 1024, null, i32 -1, i32 29}
!33 = metadata !{metadata !"", metadata !34}
!34 = metadata !{i32 0, i32 0, i32 1024, null, i32 -1, i32 13}
#version 450 core
// LunarGOO output
uniform int b;
uniform int c;
in float inf;
out gl_PerVertex {
	vec4 gl_Position;
	float gl_PointSize;
	float gl_ClipDistance[1];
	vec4 gl_ClipVertex;
	vec4 gl_FrontColor;
	vec4 gl_BackColor;
	vec4 gl_FrontSecondaryColor;
	vec4 gl_BackSecondaryColor;
	vec4 gl_TexCoord[1];
	float gl_FogFragCoord;
	float gl_CullDistance[1];
} ;
vec3 gla_globalAgg;
const float C_3d0 = 3.0;
const float C_13d8 = 13.8;
const int C_1 = 1;
const int C_5 = 5;
const int C_a15 = -15;
const int C_a1 = -1;
const int C_a13 = -13;

void main()
{
	vec3 param;
	int a;
	int a1;
	int a2;
	float H_chdnkf1 = C_3d0 - inf;
	float H_ejuvkx = H_chdnkf1 * inf;
	float H_c3cs4x = inf * C_13d8;
	float H_0kjy5i1 = C_3d0 - H_c3cs4x;
	float H_0pbv351 = H_0kjy5i1 * inf;
	param = gla_globalAgg;
	switch (b) {
		case 0:
		{
			vec3 H_86mbla1 = vec3(inf, H_ejuvkx, H_ejuvkx);
			param = H_86mbla1;
			break;
			
		}
		case 1:
		{
			vec3 H_qew7qv1 = vec3(H_0pbv351, inf, H_ejuvkx);
			param = H_qew7qv1;
			break;
			
		}
		case 2:
		{
			vec3 H_05b69e = vec3(H_ejuvkx, inf, H_ejuvkx);
			param = H_05b69e;
			break;
			
		}
		case 3:
		{
			vec3 H_qg43sq1 = vec3(H_ejuvkx, H_0pbv351, inf);
			param = H_qg43sq1;
			break;
			
		}
		case 4:
		{
			vec3 H_krxgxz = vec3(H_ejuvkx, H_ejuvkx, inf);
			param = H_krxgxz;
			break;
			
		}
		case 5:
		{
			vec3 H_sr2q011 = vec3(inf, H_ejuvkx, H_0pbv351);
			param = H_sr2q011;
			break;
			
		}
	}
	
	a1 = b;
	a = b;
	switch (c) {
		case 9:
		{
			int H_61vhzd = b << C_1;
			a2 = H_61vhzd;
			break;
			
		}
		case 10:
		{
			int H_xcwmn21 = b + C_5;
			a = H_xcwmn21;
			
		}
		case 11:
		{
			int H_uvebw71 = a + C_a15;
			a2 = H_uvebw71;
			break;
			
		}
		case 12:
		{
			int H_5y2lrl = b * b;
			int H_daifhe = H_5y2lrl + b;
			a2 = H_daifhe;
			break;
			
		}
		case 17:
		{
			int H_c2awtk = b + C_a1;
			a1 = H_c2awtk;
			
		}
		default:
		{
			int H_vqkg1y = a1 + C_a13;
			a2 = H_vqkg1y;
			break;
			
		}
	}
	
	float H_fjg2iv = float(a2);
	vec4 H_hnfrrf1 = vec4(param.x, param.y, param.z, H_fjg2iv);
	gl_Position = H_hnfrrf1;
	
}

#version 450 core
// LunarGOO output
uniform int b;
uniform int c;
in float inf;
out gl_PerVertex {
	vec4 gl_Position;
	float gl_PointSize;
	float gl_ClipDistance[1];
	vec4 gl_ClipVertex;
	vec4 gl_FrontColor;
	vec4 gl_BackColor;
	vec4 gl_FrontSecondaryColor;
	vec4 gl_BackSecondaryColor;
	vec4 gl_TexCoord[1];
	float gl_FogFragCoord;
	float gl_CullDistance[1];
} ;
const float C_3d0 = 3.0;
const float C_13d8 = 13.8;
const vec3 C_vec3p0d0p = vec3(0.0);
const int C_1 = 1;
const int C_5 = 5;
const int C_a15 = -15;
const int C_a1 = -1;
const int C_a13 = -13;

void main()
{
	vec3 param;
	int a;
	int Lg_1;
	int Lg_2;
	float H_chdnkf = C_3d0 - inf;
	float H_ejuvkx = H_chdnkf * inf;
	float H_c3cs4x = inf * C_13d8;
	float H_0kjy5i = C_3d0 - H_c3cs4x;
	float H_0pbv = H_0kjy5i * inf;
	param = C_vec3p0d0p;
	switch (b) {
		case 0:
		{
			vec3 H_86mbla1 = vec3(inf, H_ejuvkx, H_ejuvkx);
			param = H_86mbla1;
			break;
			
		}
		case 1:
		{
			vec3 H_ndzbf6 = vec3(H_0pbv, inf, H_ejuvkx);
			param = H_ndzbf6;
			break;
			
		}
		case 2:
		{
			vec3 H_05b69e = vec3(H_ejuvkx, inf, H_ejuvkx);
			param = H_05b69e;
			break;
			
		}
		case 3:
		{
			vec3 H_vd56yy1 = vec3(H_ejuvkx, H_0pbv, inf);
			param = H_vd56yy1;
			break;
			
		}
		case 4:
		{
			vec3 H_krxgxz = vec3(H_ejuvkx, H_ejuvkx, inf);
			param = H_krxgxz;
			break;
			
		}
		case 5:
		{
			vec3 H_x2iqil1 = vec3(inf, H_ejuvkx, H_0pbv);
			param = H_x2iqil1;
			break;
			
		}
	}
	
	Lg_1 = b;
	a = b;
	switch (c) {
		case 9:
		{
			int H_61vhzd = b << C_1;
			Lg_2 = H_61vhzd;
			break;
			
		}
		case 10:
		{
			int H_xcwmn = b + C_5;
			a = H_xcwmn;
			
		}
		case 11:
		{
			int H_uvebw = a + C_a15;
			Lg_2 = H_uvebw;
			break;
			
		}
		case 12:
		{
			int H_5y2lrl = b * b;
			int H_daifhe = H_5y2lrl + b;
			Lg_2 = H_daifhe;
			break;
			
		}
		case 17:
		{
			int H_c2awtk = b + C_a1;
			Lg_1 = H_c2awtk;
			
		}
		default:
		{
			int H_vqkg1y = Lg_1 + C_a13;
			Lg_2 = H_vqkg1y;
			break;
			
		}
	}
	
	float H_fjg2iv = float(Lg_2);
	vec4 H_hnfrrf1 = vec4(param.x, param.y, param.z, H_fjg2iv);
	gl_Position = H_hnfrrf1;
	
}

